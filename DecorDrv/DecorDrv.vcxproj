<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{692EF8AC-8A14-4F0D-8E58-DCBFCF6A181E}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Decor</RootNamespace>
    <ProjectName>DecorDrv</ProjectName>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\build.props" />
    <Import Project="..\d3d11.props" />
    <Import Project="..\debug.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\build.props" />
    <Import Project="..\d3d11.props" />
    <Import Project="..\release.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)_work\bin\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)_work\bin\$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;WINDOWS_IGNORE_PACKING_MISMATCH;DEUSEX;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MinimalRebuild>false</MinimalRebuild>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Windows</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>xcopy "$(OutDir)DecorDrv.dll" "C:\Games\Deus Ex\System" /Y
xcopy "$(OutDir)DecorDrv.pdb" "C:\Games\Deus Ex\System" /Y
xcopy "$(SolutionDir)DecorDrv\*.hlsl*" "C:\Games\Deus Ex\System\DecorDrv" /Y
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;WINDOWS_IGNORE_PACKING_MISMATCH;DEUSEX;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Windows</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>xcopy "$(OutDir)DecorDrv.dll" "C:\Games\Deus Ex\System" /Y
xcopy "$(OutDir)DecorDrv.pdb" "C:\Games\Deus Ex\System" /Y
xcopy "$(SolutionDir)DecorDrv\*.hlsl*" "C:\Games\Deus Ex\System\DecorDrv" /Y
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="DeusEx.Renderer.ComplexSurface.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="DeusEx.Renderer.Composite.ixx" />
    <ClCompile Include="DeusEx.SceneManager.ixx" />
    <ClCompile Include="GPU.ConstantBuffer.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="GPU.DynamicBuffer.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="GPU.RenderTexture.ixx" />
    <ClCompile Include="Utils.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="DeusEx.Renderer.Gouraud.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="Scene.GltfUtils.ixx" />
    <ClCompile Include="Scene.IRenderingContext.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="MikkTSpace.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="DeusEx.OcclusionMapCache.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="Scene.ixx" />
    <ClCompile Include="Scene.Log.ixx" />
    <ClCompile Include="Scene.Material.ixx" />
    <ClCompile Include="Scene.Node.ixx" />
    <ClCompile Include="Scene.Primitive.ixx" />
    <ClCompile Include="Scene.TangentCalculator.ixx" />
    <ClCompile Include="Scene.Texture.ixx" />
    <ClCompile Include="Scene.Utils.ixx" />
    <ClCompile Include="DeusEx.TextureCache.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="DeusEx.Drv.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="GPU.DeviceState.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="GlobalShaderConstants.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="GPU.RenDevBackend.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="GPU.ShaderCompiler.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="DeusEx.TextureConverter.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="DeusEx.Renderer.Tile.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
    <ClCompile Include="TinyGltf.ixx">
      <CompileAs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Default</CompileAs>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <FxCompile Include="ComplexSurface.hlsl" />
    <FxCompile Include="Composite.hlsl" />
    <FxCompile Include="Scene.hlsl" />
    <FxCompile Include="Tile.hlsl" />
    <FxCompile Include="Gouraud.hlsl" />
    <FxCompile Include="TransparentGouraud.hlsl" />
    <FxCompile Include="TransparentSurface.hlsl" />
    <FxCompile Include="WaterSurface.hlsl" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Common.hlsli" />
    <None Include="Defines.hlsli" />
    <None Include="packages.config" />
    <None Include="SceneConstants.hlsli" />
    <None Include="CommonSurface.hlsli" />
    <None Include="settings.json" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\Microsoft.XAudio2.Redist.1.2.11\build\native\Microsoft.XAudio2.Redist.targets" Condition="Exists('..\packages\Microsoft.XAudio2.Redist.1.2.11\build\native\Microsoft.XAudio2.Redist.targets')" />
    <Import Project="..\packages\directxtk_desktop_2019.2024.10.29.1\build\native\directxtk_desktop_2019.targets" Condition="Exists('..\packages\directxtk_desktop_2019.2024.10.29.1\build\native\directxtk_desktop_2019.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.XAudio2.Redist.1.2.11\build\native\Microsoft.XAudio2.Redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.XAudio2.Redist.1.2.11\build\native\Microsoft.XAudio2.Redist.targets'))" />
    <Error Condition="!Exists('..\packages\directxtk_desktop_2019.2024.10.29.1\build\native\directxtk_desktop_2019.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\directxtk_desktop_2019.2024.10.29.1\build\native\directxtk_desktop_2019.targets'))" />
  </Target>
</Project>